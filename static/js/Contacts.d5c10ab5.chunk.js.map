{"version":3,"file":"static/js/Contacts.d5c10ab5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Contacts_main__KdbGM\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactForm_label__-cVXI\",\"addBtn\":\"ContactForm_addBtn__CACuJ\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { addContacts } from '../../redux/contact/contactsApi';\nimport { getContacts } from '../../redux/store';\nimport style from '../ContactForm/ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    const isAdded = contacts.find(item => item.name.toLowerCase() === name.toLowerCase());\n      if (isAdded) {\n        alert(`${name} is already in contacts `);\n        return;\n      }\n      dispatch(addContacts({ name, number }));\n    \n      setName('');\n      setNumber('');\n\n  };\n\n  return (\n    <form onSubmit={onSubmitForm}>\n      <label className={style.label}>\n        Name\n        <input\n          onChange={e => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={style.label}>\n        Number\n        <input\n          onChange={e => setNumber(e.target.value)}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={style.addBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport style from '../ContactList/ContactList.module.css';\nimport { deleteContacts } from '../../redux/contact/contactsApi';\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContacts(id));\n  }\n\n  return (\n    <li className={style.item} id={id}>\n      {name}: {number}\n      <button\n        className={style.btn}\n        type=\"button\"\n        onClick={() => {onDeleteContact(id)}}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propType = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactItem from '../ContactList/ContactItem';\nimport style from '../ContactList/ContactList.module.css';\nimport { fetchContacts } from '../../redux/contact/contactsApi';\nimport { getValue, getContacts } from '../../redux/store';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getValue);\n\n  const visibleContacts = contacts.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {visibleContacts.length > 0 ? (\n        <ul className={style.list}>\n          {visibleContacts.map(({ id, name, number }) => {\n            return <ContactItem key={id} id={id} name={name} number={number} />;\n          })}\n        </ul>\n      ) : (\n        <p>Contacts' list is empty</p>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/contact/contactsSlice';\nimport style from '../Filter/Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  return (\n    <label className={style.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </label>\n  );\n}\n","import style from '../Contacts/Contacts.module.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nexport default function App() {\n  return (\n    <div className={style.main}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","getContacts","dispatch","useDispatch","onSubmitForm","e","preventDefault","find","item","toLowerCase","alert","addContacts","onSubmit","className","style","onChange","target","value","type","pattern","title","required","ContactItem","id","onClick","deleteContacts","onDeleteContact","ContactList","filter","getValue","visibleContacts","includes","useEffect","fetchContacts","length","map","propType","PropTypes","Filter","state","changeFilter","App","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}